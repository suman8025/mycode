class Solution {
public:
    int row[4]={0,0,1,-1};
    int col[4]={1,-1,0,0};
    int numIslands(vector<vector<char>>& grid) {
       int m=grid.size();
        if(m==0)
            return 0;
        int n=grid[0].size(),count=0;
        vector<vector<bool>> visited(m,vector<bool>(n,false));
        for(int i=0;i<m;i++)
            for(int j=0;j<n;j++)
            {
                if(grid[i][j]!='0' && !visited[i][j])
                {
                    count++;
                    dfs(grid,visited,i,j,m,n);
                }
            }
        return count;
    }
    void dfs(vector<vector<char>> &grid,vector<vector<bool>> &visited,int i,int j,int m,int n)
    {
        visited[i][j]=true;
        for(int k=0;k<4;k++)
        {
            int a=i+row[k],b=j+col[k];
            if(a>=0 && a<m && b>=0 && b<n && grid[a][b]!='0' && !visited[a][b])
                dfs(grid,visited,a,b,m,n);
        }
    }
};
